import org.openhab.model.script.actions.Timer
import org.openhab.core.library.types.DateTimeType

var Timer timerKitchen = null
var Timer timerBathroom = null

var DateTime RoofEnabled
var DateTime RoofDisabled
var long TimeEnabled
var float Energy
var float Power = 10

rule SetDay
when
	System started or Time is midnight
then
	Date.postUpdate(new DateTimeType())
end

rule controlHumidityInBathroom
when
        Item Bathroom_Humidity received update
then
        if ((now.getHourOfDay > 22) && (now.getHourOfDay < 08)) {
                if (Bathroom_Humidity.state >= 75) {
                        sendCommand(Bathroom_Fan, ON)
                }
        } else {
		if (Bathroom_Humidity.state <= 70) {
			timerBathroom = createTimer(now.plusSeconds(1800)) [|
                                sendCommand(Bathroom_Fan, OFF)
                                timerBathroom = null
                        ]
		} 
        }
end

rule "Startup Init"
when
	System started
then
	RoofEnabled = now
	RoofDisabled = now
	TimeEnabled = 0
	Energy = TimeEnabled/1000 * Power
	Energy = Energy/3600
	EnergyTotal.postUpdate(Energy)
end

rule "Track roofCable On Off"
when
	Item Kitchen_Light changed
then
	if (Kitchen_Light == ON) {
		Roofenabled = now
	} else {
		RoofDisabled = now
		TimeEnabled = TimeEnabled + RoofDisabled.millis - RoofEnabled.millis
		Energy = TimeEnabled/1000 * Power
		Energy = Energy/3600
		EnergyTotal.postUpdate(Energy)
	}
end
